/*
* This file was generated by the Gradle 'init' task.
*/

buildscript {
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        /*classpath 'org.flywaydb:flyway-core:8.2.2'
        classpath 'org.flywaydb:flyway-sqlserver:8.2.2'
        classpath 'org.flywaydb:flyway-mysql:8.2.2'*/
    }
}

plugins {
    id 'application'
    id 'java'
    id "org.springframework.boot" version "2.7.11"
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "com.benjaminsproule.swagger" version "1.0.14"
    id "org.owasp.dependencycheck" version "8.2.1"
    id "com.jfrog.artifactory" version "4.16.1"
    id "com.jaredsburrows.license" version "0.9.3"
    //id "org.flywaydb.flyway" version "8.2.2"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'
apply plugin: 'com.benjaminsproule.swagger'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"
apply from: "$rootDir/artifactory.gradle"
apply plugin: 'war'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.jaredsburrows.license'

group = "${proj_group}"
version = "${proj_version}"

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

application {
    mainClass = 'org.vcpl.triton.TritonApplication'
    version = '1.0'
}

configurations {
    implementation.setCanBeResolved(true)
    api.setCanBeResolved(true)
}

repositories {
//    mavenCentral()
    maven {
        name = "VCPL-Jfrog"
        url "${vcpl_repo_url}"// The Artifactory (preferably virtual) repository to resolve from
        credentials {               // Optional resolver credentials (leave out to use anonymous resolution)
            username = "${artifactory_user}"// Artifactory user name
            password = "${artifactory_password}" // Password or API Key
        }
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_18
    targetCompatibility = JavaVersion.VERSION_18
}

task showMeCache doLast() {
    configurations.compileClasspath.each { println it }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            version = project.version
            artifactId = "${proj_artifactId}"
            from components.java
            artifact file("$rootDir/app/build/libs/triton-" + project.version + ".jar")
            artifact file("$rootDir/ui/dist/triton-ui-" + project.version + ".zip")
            //from components.java
            // artifact(file("$rootDir/gradle.properties"))
        }
    }

    repositories {
        maven {
            name = "VCPL-Jfrog"
            url "${vcpl_repo_url}"// The Artifactory (preferably virtual) repository to resolve from
            credentials {               // Optional resolver credentials (leave out to use anonymous resolution)
                username = "${artifactory_user}"// Artifactory user name
                password = "${artifactory_password}" // Password or API Key
            }
        }
    }
}

//task printPubs {
//    doLast {
//        project.publishing.publications.each { publication ->
//            println "Publication [name: $publication.name, groupId: $publication.groupId, artifactId: $publication.artifactId, version: $publication.version"
//        }
//
//        //  def pluginMaven = project.publishing.publications['maven-publish']
//        // println "pluginMaven [name: $pluginMaven.name, groupId: $pluginMaven.groupId, artifactId: $pluginMaven.artifactId, version: $pluginMaven.version"
//    }
//}


dependencies {
    implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.27'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.11'
    //implementation project(':utilities')
    //implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    developmentOnly ('org.springframework.boot:spring-boot-devtools') {
        exclude group: 'org.springframework', module: 'spring-expression'
        exclude group: 'org.springframework', module: 'spring-context'
        exclude group: 'org.springframework', module: 'spring-core'
    }
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.7.8'
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.27'
    // https://mvnrepository.com/artifact/javax.validation/validation-api
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.1'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.7.8'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '3.0.3', ext: 'pom'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.11'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.7.11'
    // https://mvnrepository.com/artifact/org.keycloak/keycloak-spring-security-adapter
    implementation group: 'org.keycloak', name: 'keycloak-spring-security-adapter', version: '23.0.3'
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.2.1'
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.1'
    // https://mvnrepository.com/artifact/org.springframework/spring-web
    implementation group: 'org.springframework', name: 'spring-web', version: '5.3.27'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.10.3'
    implementation group: 'org.springframework', name: 'spring-expression', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-aop', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-context-support', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-beans', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-tx', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-orm', version: '5.3.27'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-actuator', version: '2.7.11'
    implementation group: 'org.springframework.boot', name: 'spring-boot-actuator-autoconfigure', version: '2.7.11'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.7.11'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: '2.7.11'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '3.2.1'

    // https://mvnrepository.com/artifact/org.mozilla/rhino
    implementation group: 'org.mozilla', name: 'rhino', version: '1.7.14'

    testImplementation  'org.springframework:spring-test:6.0.5'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager', version: '1.12.433'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    runtimeOnly 'mysql:mysql-connector-java'
    testRuntimeOnly 'com.h2database:h2'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.3'
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'


// https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'

// https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

// https://mvnrepository.com/artifact/org.apache.oltu.oauth2/org.apache.oltu.oauth2.client   \
    implementation group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.2'

    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.311'
    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
//    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    implementation 'org.apache.commons:commons-email:1.6.0'

    // https://mvnrepository.com/artifact/com.microsoft.ews-java-api/ews-java-api
    implementation group: 'com.microsoft.ews-java-api', name: 'ews-java-api', version: '2.0'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'javax.xml.ws', name: 'jaxws-api', version: '2.2.11'


    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'

    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'
    // https://mvnrepository.com/artifact/com.auth0/jwks-rsa
    implementation group: 'com.auth0', name: 'jwks-rsa', version: '0.21.2'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'


    implementation 'com.oracle.database.jdbc:ojdbc8:19.6.0.0'
    implementation 'com.oracle.database.jdbc:ucp:19.6.0.0'

    //Flyway implementation
    /*implementation 'org.flywaydb:flyway-core:8.2.2'

     implementation 'org.flywaydb:flyway-sqlserver:8.2.2'

    implementation 'org.flywaydb:flyway-mysql:8.2.2'*/

    // https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.9.0'




    // https://mvnrepository.com/artifact/org.keycloak/keycloak-admin-client
    implementation group: 'org.keycloak', name: 'keycloak-admin-client', version: '23.0.4'

    // OWASP Vulnerability fix
//    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.0'
//    implementation group: 'org.json', name: 'json', version: '20231013'
    implementation group: 'org.json', name: 'json', version: '20230227'


    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.2'
//    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'

    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.25.0'


    // https://mvnrepository.com/artifact/org.freemarker/freemarker
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.31'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'


    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.85'

// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.0'

    // https://mvnrepository.com/artifact/org.mozilla/rhino
    implementation group: 'org.mozilla', name: 'rhino', version: '1.7.14'


//    Liquibase configuration______________
//    implementation 'org.liquibase:liquibase-core:4.16.0'
//    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.23.0'
//_________________________________________

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-quartz
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-quartz', version: '3.2.1'

//    // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc
//    implementation group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '11.0.0-M9'

//    oauth2 Configuration
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server', version: '3.2.1'

    //New Implementation
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.77'
//    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.14'
//    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.14'
    implementation group: 'org.json', name: 'json', version: '20231013'

}

configurations.all {
    exclude group: 'org.apache.james', module: 'apache-mime4j'
    exclude group: 'org.apache.james', module: 'apache-mime4j-core'
    exclude group: 'org.apache.james', module: 'apache-mime4j-dom'
    exclude group: 'org.apache.james', module: 'apache-mime4j-storage'
    exclude group: 'org.yaml', module: 'snakeyaml'
    exclude group: 'org.eclipse.microprofile.config', module: 'microprofile-config-api'
    exclude group: 'org.eclipse.angus', module: 'angus-activation'
    exclude group: 'org.eclipse.angus', module: 'angus-mail'
    exclude group: 'com.github.java-json-tools', module: 'btf'
    exclude group: 'com.github.java-json-tools', module: 'json-patch'
    exclude module: 'msg-simple'
    exclude group: 'javax.servlet.jsp.jstl', module: 'jstl'
    exclude module: 'jackson-jaxrs-json-provider'
    exclude module: 'commons-math3'
    exclude module: 'commons-logging'
    exclude group: 'com.google.guava', module: 'guava'
    exclude module: 'tomcat-embed-websocket'
    exclude module: 'resteasy-client'
    exclude module: 'resteasy-client-api'
    exclude module: 'resteasy-jackson2-provider'
    exclude module: 'resteasy-jaxb-provider'
    exclude group: 'org.jboss.resteasy', module: 'resteasy-core'
    exclude group: 'org.jboss.resteasy', module: 'resteasy-core-spi'
    exclude group: 'org.jboss.resteasy', module: 'resteasy-multipart-provider'
    exclude group: 'commons-codec', module: 'commons-codec'
    exclude group: 'org.latencyutils', module: 'LatencyUtils'
    exclude module: 'commons-pool2'
    exclude module: 'keycloak-server-spi-private'
    exclude module: 'hutool-json'
    exclude group: 'org.springframework', module: 'spring-aspects'
    exclude group: 'org.springframework', module: 'spring-jcl'
    exclude group: 'javax.activation', module: 'javax.activation-api'
}

test {
    useJUnitPlatform()
}


bootJar {
    baseName = 'triton'
    enabled = true
    manifest {
        attributes('Implementation-Title':   'Triton',
                'Implementation-Version': version)
    }
}

jar {
    baseName = 'triton'
    enabled = false
    manifest {
        attributes('Implementation-Title':   'Triton',
                'Implementation-Version': version)
    }
}

def profiles = 'dev'

bootRun {
    //systemProperties = System.properties
    //Specify a profile
    jvmArgs = ['-Dspring.profiles.active='+profiles]
}

licenseReport {
    generateCsvReport = true
    generateHtmlReport = true
    generateJsonReport = true
    generateTextReport = true
//    ignoredPatterns = []

    // These options are ignored for Java projects
    copyCsvReportToAssets = true
    copyHtmlReportToAssets = true
    copyJsonReportToAssets = true
    copyTextReportToAssets = true
    useVariantSpecificAssetDirs = true
}


/*task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'org.vcpl.triton.TritonApplication'
    }
    baseName = 'triton-all-in-one-jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}*/



/*
flyway {
    def env = "${project.findProperty('dbEnv') ? project.property('dbEnv') : 'DEV'}"
    

    if(env == "PROD")
    {
        println "Creating PROD DB"
        url = "jdbc:mysql://${prod_db_url}"
        user = "${prod_db_username}"
        password = "${prod_db_password}"
        schemas = ["${prod_db_schema}"]
        createSchemas=true
    } else if(env == "UAT"){
        println "Creating UAT DB"
        url = "jdbc:mysql://${uat_db_url}"
        user = "${uat_db_username}"
        password = "${uat_db_password}"
        schemas = ["${uat_db_schema}"]
        createSchemas=true
    } else
    {
        println env
        println "Creating DEV DB"
        url = "jdbc:mysql://${dev_db_url}"
        user = "${dev_db_username}"
        password = "${dev_db_password}"
        schemas = ["${dev_db_schema}"]
        createSchemas=true
    }

}*/

ext {
    buildNumber = System.getenv("BUILD_NUMBER")
//    rel_env = System.getenv("RELEASE_ENV")
    rel_env = "dev"
    java_env = rel_env.equals("prod") ? "${artifact_prod_repo_java}" : "${artifact_nonprod_repo_java}"
    angular_env = rel_env.equals("prod") ? "${artifact_prod_repo_angular}" : "${artifact_nonprod_repo_angular}"
}
println "BUILD_NUMBER is: $buildNumber"
println "RELEASE_ENV is : $rel_env"
println "$projectDir/../ui"
println "Java Env is :  $java_env"
println "Angular Env is : $angular_env"
println "ANgular Path  :  $projectDir/../ui/environments/environment.ts"


task printPubs {
    doLast {
        println "ANgular Path  :  $projectDir/../ui/src/environments/environment.ts"
    }
}

task prepareDockerDir(type: Copy) {
    dependsOn bootJar
    doFirst {
        from "$projectDir${src_path_url}"
        include "logback.xml"
        into "$projectDir${build_path}/docker"
    }
    from "$projectDir${build_path}/libs"
    include "**/*.jar"
    into "$projectDir${build_path}/docker"
}

task createAndWriteToFile {
    dependsOn prepareDockerDir
    doLast {
        def outputFile = file("$projectDir${dockerfile_path}/Dockerfile")
        outputFile.createNewFile()
        outputFile.withWriter { writer ->
            writer.writeLine("FROM openjdk:18.0.2-jdk")
            writer.writeLine("RUN mkdir -p logback && chmod 777 logback")
            writer.writeLine("COPY logback.xml  logback/")
            writer.writeLine("RUN chmod 777 logback/logback.xml")
            writer.writeLine("WORKDIR /${proj_artifactId}")
            writer.writeLine("COPY *.jar ${proj_artifactId}.jar")
            writer.writeLine("EXPOSE 8080")
            writer.writeLine("ENTRYPOINT [\"java\", \"-jar\",\"/${proj_artifactId}/${proj_artifactId}.jar\" , \"--spring.profiles.active=$rel_env\"]")
        }
    }
}

task buildJavaDockerImage(type: Exec) {
    dependsOn createAndWriteToFile
    workingDir "$projectDir${build_path}/docker"
    commandLine "docker", "build", "-t", "${vcpl_jfrog_url}/$java_env/${proj_artifactId}/$rel_env/${proj_artifactId}:${proj_version}.$buildNumber", "."
}

//task pushJavaDockerImage(type: Exec) {
//    dependsOn buildJavaDockerImage
//    commandLine "docker", "push", "${vcpl_jfrog_url}/$java_env/${proj_artifactId}/$rel_env/${proj_artifactId}:${proj_version}.$buildNumber"
//}

task modifyTypescriptFile {
    doLast {
        File environmentFile = file("$projectDir/../ui/src/environments/environment.ts") // Replace with the actual path to your environment.ts file
        def content = environmentFile.text

        // Update the envVal property
        content = content.replaceAll(/envVal\s*=\s*['"].*['"]/, "envVal = '$rel_env'")

        // Write the updated content back to the file
        environmentFile.text = content
    }
}

task createAndWriteToFileForAngular {
    dependsOn modifyTypescriptFile
    doLast {
        def outputFile = file("$projectDir/../ui/Dockerfile")
        outputFile.createNewFile()
        outputFile.withWriter { writer ->
            writer.writeLine("FROM node:16.20.1-alpine3.18 as node")
            writer.writeLine("WORKDIR /app")
            writer.writeLine("COPY .  .")
            writer.writeLine("RUN npm install -g @angular/cli")
            writer.writeLine("RUN npm install")
            writer.writeLine("RUN ng build  --configuration=$rel_env")
            writer.writeLine("FROM nginx:alpine")
            writer.writeLine("COPY --from=node /app/dist/triton  /usr/share/nginx/html")
            writer.writeLine("EXPOSE 80")
        }
    }
}


task buildAngularDockerImage(type: Exec) {
    dependsOn createAndWriteToFileForAngular
    workingDir "$projectDir/../ui/"
    commandLine "docker", "build", "-t", "${vcpl_jfrog_url}/$angular_env/${proj_artifactId}/$rel_env/${proj_artifactId}:${proj_version}.$buildNumber", "."
}


//task pushAngularDockerImage(type: Exec) {
//    dependsOn buildAngularDockerImage
//    commandLine "docker", "push", "${vcpl_jfrog_url}/$angular_env/${proj_artifactId}/$rel_env/${proj_artifactId}:${proj_version}.$buildNumber"
//}
